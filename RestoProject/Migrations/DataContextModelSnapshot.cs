// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestoProject.Data;

#nullable disable

namespace RestoProject.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RestoProject.Shared.Entities.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DishId")
                        .HasColumnType("int");

                    b.Property<string>("DishName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FlavorId")
                        .HasColumnType("int");

                    b.Property<string>("FlavorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("RestoProject.Shared.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TMCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Icon = "book",
                            Name = "Foods",
                            Url = "foods"
                        },
                        new
                        {
                            Id = 2,
                            Icon = "camera-slr",
                            Name = "Drinks",
                            Url = "drinks"
                        },
                        new
                        {
                            Id = 3,
                            Icon = "aperture",
                            Name = "Desserts",
                            Url = "desserts"
                        });
                });

            modelBuilder.Entity("RestoProject.Shared.Entities.Dish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Views")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("TMDish");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            DateCreated = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Nasi goreng adalah makanan jalanan populer di Asia. Di beberapa negara Asia, restoran-restoran kecil, gerai-gerai pinggir jalan dan pedagang keliling mengkhususkan diri dalam menyajikan nasi goreng.",
                            Image = "https://placehold.co/200x200/png?text=Nasi+Goreng\\nKambing",
                            IsDeleted = false,
                            IsPublic = false,
                            Name = "Nasi Goreng Kambing",
                            Views = 0
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            DateCreated = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sate kambing adalah sejenis makanan sate terbuat dari daging kambing. daging kambing tersebut disate (ditusuk dengan bambu yang dibentuk seperti lidi yang agak besar) dan dibumbui dengan rempah-rempah dan bumbu dapur, kemudian dibakar.",
                            Image = "https://placehold.co/200x200/png?text=Sate+Kambing",
                            IsDeleted = false,
                            IsPublic = false,
                            Name = "Sate Kambing",
                            Views = 0
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            DateCreated = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Jus atau sari adalah minuman yang terbuat dari ekstraksi atau pemerasan cairan alami yang terkandung dalam buah dan sayuran.",
                            Image = "https://placehold.co/200x200/png?text=Jus",
                            IsDeleted = false,
                            IsPublic = false,
                            Name = "Jus",
                            Views = 0
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            DateCreated = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Es krim' merupakan sebuah makanan beku yang dibuat dari produk susu seperti krim, lalu dicampur dengan perasa dan pemanis buatan ataupun alami. terdapat beberapa vaian rasa",
                            Image = "https://placehold.co/200x200/png?text=Ice+Cream",
                            IsDeleted = false,
                            IsPublic = false,
                            Name = "Es Krim",
                            Views = 0
                        });
                });

            modelBuilder.Entity("RestoProject.Shared.Entities.DishOrder", b =>
                {
                    b.Property<string>("OrderId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderTime")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderId");

                    b.ToTable("DishOrders");

                    b.HasData(
                        new
                        {
                            OrderId = "ABC01012024-001",
                            Description = "Tolong sambel dipisah...",
                            Name = "Ayus",
                            OrderTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("RestoProject.Shared.Entities.DishVariant", b =>
                {
                    b.Property<int>("DishId")
                        .HasColumnType("int");

                    b.Property<int>("FlavorId")
                        .HasColumnType("int");

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DishId", "FlavorId");

                    b.HasIndex("FlavorId");

                    b.ToTable("TTDishVariant");

                    b.HasData(
                        new
                        {
                            DishId = 1,
                            FlavorId = 1,
                            OriginalPrice = 18.00m,
                            Price = 18.00m
                        },
                        new
                        {
                            DishId = 2,
                            FlavorId = 1,
                            OriginalPrice = 30.00m,
                            Price = 30.00m
                        },
                        new
                        {
                            DishId = 3,
                            FlavorId = 7,
                            OriginalPrice = 12.00m,
                            Price = 12.00m
                        },
                        new
                        {
                            DishId = 4,
                            FlavorId = 5,
                            OriginalPrice = 10.00m,
                            Price = 11.00m
                        },
                        new
                        {
                            DishId = 4,
                            FlavorId = 6,
                            OriginalPrice = 10.00m,
                            Price = 11.50m
                        },
                        new
                        {
                            DishId = 4,
                            FlavorId = 7,
                            OriginalPrice = 10.00m,
                            Price = 12.00m
                        },
                        new
                        {
                            DishId = 3,
                            FlavorId = 8,
                            OriginalPrice = 10.00m,
                            Price = 13.00m
                        },
                        new
                        {
                            DishId = 2,
                            FlavorId = 10,
                            OriginalPrice = 30.00m,
                            Price = 35.00m
                        },
                        new
                        {
                            DishId = 2,
                            FlavorId = 11,
                            OriginalPrice = 30.00m,
                            Price = 37.00m
                        });
                });

            modelBuilder.Entity("RestoProject.Shared.Entities.Flavor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TMFlavor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Kambing"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sapi"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ayam"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Ikan"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Vanila"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Coklat"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Stroberi"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Alpukat"
                        },
                        new
                        {
                            Id = 9,
                            Name = "ala-carte"
                        },
                        new
                        {
                            Id = 10,
                            Name = "tambah Nasi"
                        },
                        new
                        {
                            Id = 11,
                            Name = "tambah Lontong"
                        });
                });

            modelBuilder.Entity("RestoProject.Shared.Entities.Stats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("LastVisit")
                        .HasColumnType("datetime2");

                    b.Property<int>("Visits")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Stats");
                });

            modelBuilder.Entity("RestoProject.Shared.Entities.Users", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Username");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Username = "admin",
                            Name = "Admin",
                            Password = "6a67e39f6ecf03658deb4f130682ae18269c3c31083b191213cbbb27f8ece75f",
                            Role = 0
                        },
                        new
                        {
                            Username = "meja_1",
                            Name = "Meja 1",
                            Password = "6a67e39f6ecf03658deb4f130682ae18269c3c31083b191213cbbb27f8ece75f",
                            Role = 1
                        },
                        new
                        {
                            Username = "meja_2",
                            Name = "Meja 2",
                            Password = "6a67e39f6ecf03658deb4f130682ae18269c3c31083b191213cbbb27f8ece75f",
                            Role = 1
                        },
                        new
                        {
                            Username = "meja_3",
                            Name = "Meja 3",
                            Password = "6a67e39f6ecf03658deb4f130682ae18269c3c31083b191213cbbb27f8ece75f",
                            Role = 1
                        });
                });

            modelBuilder.Entity("RestoProject.Shared.Entities.CartItem", b =>
                {
                    b.HasOne("RestoProject.Shared.Entities.DishOrder", "OrdId")
                        .WithMany("CartItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("OrdId");
                });

            modelBuilder.Entity("RestoProject.Shared.Entities.Dish", b =>
                {
                    b.HasOne("RestoProject.Shared.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("RestoProject.Shared.Entities.DishVariant", b =>
                {
                    b.HasOne("RestoProject.Shared.Entities.Dish", "Dish")
                        .WithMany("Variants")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestoProject.Shared.Entities.Flavor", "Flavor")
                        .WithMany()
                        .HasForeignKey("FlavorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");

                    b.Navigation("Flavor");
                });

            modelBuilder.Entity("RestoProject.Shared.Entities.Dish", b =>
                {
                    b.Navigation("Variants");
                });

            modelBuilder.Entity("RestoProject.Shared.Entities.DishOrder", b =>
                {
                    b.Navigation("CartItems");
                });
#pragma warning restore 612, 618
        }
    }
}
