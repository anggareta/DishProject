@page "/account"
@inject ISyncLocalStorageService LocalStorage
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))

<PageTitle>Account</PageTitle>

@if (!string.IsNullOrEmpty(GetUserName()))
{
	<h3 class="my-4">Your Account</h3>

  <p>@GetUserName()</p>

  @* <button type="button" class="btn btn-danger" @onclick="mainLayout.Logout">Logout</button> *@
}
else
{
	<h3 class="my-4">Please Login</h3>

  <button type="button" class="btn btn-success" @onclick="OpenLogin">Login</button>
}

@code {
  [CascadingParameter]
  public TopCart mainLayout { get; set; }

  protected override async Task OnInitializedAsync()
  {
    await base.OnInitializedAsync();
  }

  public string? GetUserName()
  {
    return LocalStorage.GetItemAsString("user");
  }

  public async Task OpenLogin()
  {
    // TopCart tc = new TopCart();
    // tc.display = true;
    // await Task.Delay(100);
    // tc.show = true;
    await mainLayout.OpenLogin();
  }

  // public async Task OpenLogin()
  // {
  //   display = true;
  //   await Task.Delay(100);
  //   show = true;
  // }

  // public async Task Logout()
  // {
  //   user = null;
  //   loggedIn = false;
  //   await LocalStorage.RemoveItemAsync("user");
  // }

  // private async Task Close()
  // {
  //   show = false;
  //   await Task.Delay(500);
  //   display = false;
  // }

  // private async Task Login()
  // {
  //   if (!string.IsNullOrEmpty(user) && !string.IsNullOrWhiteSpace(password))
  //   {
  //     // NOTE: Check password here!!
  //     await Close();
  //     loggedIn = true;
  //     password = null;
  //     //await LocalStorage.SaveStringAsync("user", user);
  //     await LocalStorage.SetItemAsStringAsync("user", user);
  //   }
  // }

  // protected override async Task OnInitializedAsync()
  // {
  //   await base.OnInitializedAsync();
  //   //user = await LocalStorage.GetStringAsync("user");
  //   user = await LocalStorage.GetItemAsStringAsync("user");
  //   loggedIn = !string.IsNullOrEmpty(user);
  // }
}
